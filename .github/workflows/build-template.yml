on:
  workflow_call:
    inputs:
      host:
        required: true
        type: string
      images:
        required: true
        type: string
      machines:
        required: true
        type: string
      url:
        required: true
        type: string
      branch:
        required: true
        type: string
      ref:
        required: true
        type: string
      ref_type:
        type: string
        default: ref
    secrets:
      TUXSUITE_TOKEN:
        required: true

env:
  POKY_URL: https://git.yoctoproject.org/poky
  META_OE_URL: https://github.com/openembedded/meta-openembedded
  DISTRO: poky
  TCLIBC: glibc musl
  KERNELS: linaro-qcomlt yocto
  INITRAMFS: initramfs-rootfs-image ~

jobs:
  build:
    name: ${{github.event_name}} - ${{github.ref}}
    runs-on: ubuntu-latest
    steps:
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade tuxsuite
    - name: Setup tux plan
      run: |
        cat << EOF > plan.yaml
        name: CI for ${{github.repository}}
        description: ${{github.workflow}} - ${{github.ref}}
        version: 1

        common: &commondata
          container: ${{inputs.host}}
          envsetup: poky/oe-init-build-env
          sources:
            git_trees:
              - branch: ${{inputs.branch}}
                url: $POKY_URL
              - branch: ${{inputs.branch}}
                url: $META_OE_URL
              - ${{inputs.ref_type}}: ${{inputs.ref}}
                url: ${{inputs.url}}
          distro: $DISTRO
          target: ${{inputs.images}}
          bblayers_conf:
            - BBLAYERS += '../$(echo ${{github.repository}} | cut -d'/' -f2) ../meta-openembedded/meta-oe ../meta-openembedded/meta-python'
          artifacts: []
        EOF

        for tclibc in ${TCLIBC}; do
        for kernel in ${KERNELS}; do
        for initramfs in ${INITRAMFS}; do
        cat << EOF >> plan.yaml
        ${tclibc}-${kernel}: &${tclibc}-${kernel}
          local_conf:
            - INHERIT += 'buildstats buildstats-summary'
            - INHERIT:remove = 'rm_work'
            - TCLIBC := '${tclibc}'
            - PREFERRED_PROVIDER_virtual/kernel := 'linux-${kernel}'
            - INITRAMFS_IMAGE := '${initramfs}'

        EOF
        done
        done
        done

        cat << EOF >> plan.yaml
        jobs:
        EOF

        # FIXME: loop over kernels instead of hardcoding them, need to support armv7a and modem first
        for tclibc in ${TCLIBC}; do
        cat << EOF >> plan.yaml
          - name: ${tclibc}
            bakes:
        EOF
        for machine in ${{inputs.machines}}; do
        cat << EOF >> plan.yaml
              - { <<: [*commondata, *${tclibc}-linaro-qcomlt], machine: ${machine}, name: ${machine}-${tclibc} }
        EOF
        if [ "${machine}" = "qcom-armv8a" -a "${{inputs.branch}}" = "master" ] ; then
        cat << EOF >> plan.yaml
              - { <<: [*commondata, *${tclibc}-yocto], machine: qcom-armv8a, name: qcom-armv8a-${tclibc}-yocto }
        EOF
        fi
        done
        done

        echo "Ready to submit this Tux Plan:"
        cat plan.yaml
    - name: Run build
      run: |
        tuxsuite plan plan.yaml
      env:
        TUXSUITE_TOKEN: ${{ secrets.TUXSUITE_TOKEN }}
